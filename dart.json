{
  "Dart async function": {
    "prefix": "afn",
    "description": "Scaffold an async function",
    "body": ["Future<${1}> ${2}(${3} ${4}) async {", "\t${5}", "}", "\n${0}"]
  },
  "Dart async unit test": {
    "description": "Scaffold and async unit test",
    "prefix": "aut",
    "body": ["test('should ${1}', () async {", "\t${2}", "});", "\n${0}"]
  },
  "Dart class implementing an abstract class": {
    "description": "Scaffold a class implementing an abstract class",
    "prefix": ["clsi", "clsimp", "classimplements"],
    "body": [
      "class ${1} implements ${2}{",
      "\tconst ${1}();",
      "\n\t${3}",
      "}",
      "\n${0}"
    ]
  },
  "Dart class": {
    "description": "Scaffold a class",
    "prefix": ["cls", "class"],
    "body": ["class ${1} {", "\tconst ${1}(${2});", "\n\t${3}", "}", "\n${0}"]
  },
  "Dart do-while loop": {
    "description": "Scaffold a do-while loop",
    "prefix": "do",
    "body": ["do {", "\t${1}", "} while (${2});", "\n${0}"]
  },
  "Dart for loop": {
    "description": "Scaffold a for loop",
    "prefix": "for",
    "body": [
      "for (var ${1} = ${2}; ${1} ${3}; ${1}${4}) {",
      "\t${5}",
      "}",
      "\n${0}"
    ]
  },
  "Dart for..in loop": {
    "description": "Scaffold a for..in loop",
    "prefix": "forin",
    "body": ["for (var ${1} in ${2}){", "\t${3}", "}", "\n${0}"]
  },
  "Dart function": {
    "description": "Scaffold a simple function",
    "prefix": ["fn", "fun", "func"],
    "body": ["${1} ${2}(${3} ${4}) {", "\t${5}", "}", "\n${0}"]
  },
  "Dart group of unit tests": {
    "description": "Scaffold a unit test group",
    "prefix": "gut",
    "body": ["group('${1}', () {", "\t${2}", "});", "\n${0}"]
  },
  "Dart if block": {
    "description": "Scaffold an if block",
    "prefix": "if",
    "body": ["if (${1}) {", "\t${2}", "}", "\n${0}"]
  },
  "Dart if-elif-else block": {
    "description": "Scaffold a if-elif-else",
    "prefix": "ifelif",
    "body": [
      "if (${1}) {",
      "\t${2}",
      "} else if (${3}) {",
      "\t${4}",
      "} else {",
      "\t${5}",
      "}",
      "\n${0}"
    ]
  },
  "Dart if-else block": {
    "description": "Scaffold an if-else block",
    "prefix": "ifel",
    "body": ["if (${1}) {", "\t${2}", "} else {", "\t${3}", "}", "\n${0}"]
  },
  "Dart inherited class": {
    "description": "Scaffold an inherited class",
    "prefix": ["clse", "clsex", "classextends"],
    "body": [
      "class ${1} extends ${2} {",
      "\tconst ${1}({super.key}, ${3});",
      "\n\t${4}",
      "}",
      "\n${0}"
    ]
  },
  "Dart switch 1 case": {
    "description": "Scaffold a switch statement with 1 case",
    "prefix": ["sw", "sw1", "switch", "switch1"],
    "body": [
      "switch(${1}) {",
      "\tcase ${2}: {",
      "\t\t${3}",
      "\n\t\tbreak;",
      "}",
      "\tdefault: {",
      "\t\t${4}",
      "\n\t\tbreak;",
      "\t}",
      "}",
      "\n${0}"
    ]
  },
  "Dart switch 2 cases": {
    "description": "Scaffold a switch statement with 2 cases",
    "prefix": ["sw2", "switch2"],
    "body": [
      "switch(${1}) {",
      "\tcase ${2}: {",
      "\t\t${3}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${3}: {",
      "\t\t${4}",
      "\n\t\tbreak;",
      "}",
      "\tdefault: {",
      "\t\t${5}",
      "\n\t\tbreak;",
      "\t}",
      "}",
      "\n${0}"
    ]
  },
  "Dart switch with 3 cases": {
    "description": "Scaffold a switch statement with 3 cases",
    "prefix": ["sw3", "switch3"],
    "body": [
      "switch(${1}) {",
      "\tcase ${2}: {",
      "\t\t${3}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${4}: {",
      "\t\t${5}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${6}: {",
      "\t\t${7}",
      "\n\t\tbreak;",
      "}",
      "\tdefault: {",
      "\t\t${8}",
      "\n\t\tbreak;",
      "\t}",
      "}",
      "\n${0}"
    ]
  },
  "Dart switch with 4 cases": {
    "description": "Scaffold a switch statement with 4 cases",
    "prefix": ["sw4", "switch4"],
    "body": [
      "switch(${1}) {",
      "\tcase ${2}: {",
      "\t\t${3}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${4}: {",
      "\t\t${5}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${6}: {",
      "\t\t${7}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${8}: {",
      "\t\t${9}",
      "\n\t\tbreak;",
      "}",
      "\tdefault: {",
      "\t\t${10}",
      "\n\t\tbreak;",
      "\t}",
      "}",
      "\n${0}"
    ]
  },
  "Dart switch with 5 cases": {
    "description": "Scaffold a switch statement with 5 cases",
    "prefix": ["sw5", "switch5"],
    "body": [
      "switch(${1}) {",
      "\tcase ${2}: {",
      "\t\t${3}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${4}: {",
      "\t\t${5}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${6}: {",
      "\t\t${7}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${8}: {",
      "\t\t${9}",
      "\n\t\tbreak;",
      "}",
      "\tcase ${10}: {",
      "\t\t${11}",
      "\n\t\tbreak;",
      "}",
      "\tdefault: {",
      "\t\t${12}",
      "\n\t\tbreak;",
      "\t}",
      "}",
      "\n${0}"
    ]
  },
  "Dart ternary operation": {
    "description": "Scaffolld a ternary operation",
    "prefix": ["tn", "tern", "ternary"],
    "body": ["(${1}) ? ${2} : ${3};", "\n${0}"]
  },
  "Dart try-catch": {
    "description": "Scaffold a try-catch block",
    "prefix": "tc",
    "body": [
      "try {",
      "\t${1}",
      "} catch (${2:Exception} ${3:e}) {",
      "\t${4}",
      "}",
      "\n${0}"
    ]
  },
  "Dart try-on": {
    "description": "Scaffold a try-on block",
    "prefix": "ton",
    "body": ["try {", "\t${1}", "} on ${2:Exception} {", "\t${0}", "}"]
  },
  "Dart try-on-catch": {
    "description": "Scaffold a try-on-catch block",
    "prefix": "toc",
    "body": [
      "try {",
      "\t${1}",
      "} on ${2:Exception} {",
      "\t${3: }",
      "} catch(${4:Exception} ${5:e}) {",
      "\t${6}",
      "}",
      "\n${0}"
    ]
  },
  "Dart try-on-catch-finally": {
    "description": "Scaffold a try-on-catch-finally block",
    "prefix": "tocf",
    "body": [
      "try {",
      "\t${1}",
      "} on ${2:Exception} {",
      "\t${3}",
      "} catch(${4:Exception} ${5:e}) {",
      "\t${6}",
      "} finally {",
      "\t${7}",
      "}",
      "\n${0}"
    ]
  },
  "Dart unit test": {
    "description": "Scaffold a unit test",
    "prefix": "ut",
    "body": ["test('should ${1}', () {", "\t${2}", "});", "\n${0}"]
  },
  "Dart while loop": {
    "description": "Scaffold a while loop",
    "prefix": "while",
    "body": ["while(${1}){", "\t${2}", "}", "\n${0}"]
  }
}
